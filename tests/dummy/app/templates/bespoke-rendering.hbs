<h3 class='section-heading'>Bespoke
</h3>
<p class="downer">
  In the current incarnation of this widget overriding the various sub-components of the dropdown is possible by passing in a function to one of the following:
  <ul>
    <li>item<i>Render</i><span class="dim">(data,escape) { ... }</span></li>
    <li>option<i>Render</i><span class="dim">(data,escape) { ... }</span></li>
    <li>create<i>Render</i><span class="dim">(data,escape) { ... }</span></li>
    <li>group<i>Render</i><span class="dim">(data,escape) { ... }</span></li>
    <li>groupHeader<i>Render</i><span class="dim">(data,escape) { ... }</span></li>
  </ul>
</p>
<p>
  You can find a demonstration of it's use on the Selectize site <a href="https://github.com/brianreavis/selectize.js/blob/master/examples/customization.html">here</a>.
</p>
<p>
  I would have greatly preferred it if this rendering could be done by adding other ember components and the renders be articulated in handlebars templates rather than in Javascript. If anyone knows how to do this please send me a PR and let's get it changed.
</p>
<h4>Example</h4>
<row>
  <widget class='left'>
    {{ui-tags-input itemRender=item optionRender=option options=things}}
  </widget>
  <code>
    {{display-component componentName='ui-tags-input' itemRender=':item' optionRender=':option' options=':things'}}
  </code>
  <description>
    In this case we've overwritten the <prop>item</prop> which is a selected tag, and <prop>option</prop>
    which is the list of options. You see this code in the controller: <a href="https://github.com/lifegadget/ui-selectize/blob/master/tests/dummy/app/controllers/bespoke-rendering.js#L6-L16">here</a>
  </description>
</row>
